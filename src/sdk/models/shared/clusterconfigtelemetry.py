"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import consensusconfigtelemetry as shared_consensusconfigtelemetry
from ..shared import p2pconfigtelemetry as shared_p2pconfigtelemetry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ClusterConfigTelemetry:
    consensus: shared_consensusconfigtelemetry.ConsensusConfigTelemetry = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consensus') }})
    grpc_timeout_ms: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grpc_timeout_ms') }})
    p2p: shared_p2pconfigtelemetry.P2pConfigTelemetry = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p2p') }})
    

