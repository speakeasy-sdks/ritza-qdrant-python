"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import optimizertelemetry as shared_optimizertelemetry
from ..shared import segmenttelemetry as shared_segmenttelemetry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class LocalShardTelemetry:
    optimizations: shared_optimizertelemetry.OptimizerTelemetry = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('optimizations') }})
    segments: list[shared_segmenttelemetry.SegmentTelemetry] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segments') }})
    variant_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variant_name'), 'exclude': lambda f: f is None }})
    

