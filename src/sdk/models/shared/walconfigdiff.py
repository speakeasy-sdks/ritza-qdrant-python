"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WalConfigDiff:
    r"""Custom params for WAL. If none - values from service configuration file are used."""
    
    wal_capacity_mb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wal_capacity_mb'), 'exclude': lambda f: f is None }})
    r"""Size of a single WAL segment in MB"""  
    wal_segments_ahead: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wal_segments_ahead'), 'exclude': lambda f: f is None }})
    r"""Number of WAL segments to create ahead of actually used ones"""  
    