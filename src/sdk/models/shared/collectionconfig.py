"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import collectionparams as shared_collectionparams
from ..shared import hnswconfig as shared_hnswconfig
from ..shared import optimizersconfig as shared_optimizersconfig
from ..shared import walconfig as shared_walconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CollectionConfig:
    
    hnsw_config: shared_hnswconfig.HnswConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hnsw_config') }})
    r"""Config of HNSW index"""
    optimizer_config: shared_optimizersconfig.OptimizersConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('optimizer_config') }})
    params: shared_collectionparams.CollectionParams = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('params') }})
    wal_config: shared_walconfig.WalConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wal_config') }})
    quantization_config: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantization_config'), 'exclude': lambda f: f is None }})
    