"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import payloadindexinfo as shared_payloadindexinfo
from ..shared import segmenttype as shared_segmenttype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SegmentInfo:
    r"""Aggregated information about segment"""
    
    disk_usage_bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disk_usage_bytes') }})
    index_schema: dict[str, shared_payloadindexinfo.PayloadIndexInfo] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index_schema') }})
    is_appendable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_appendable') }})
    num_deleted_vectors: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('num_deleted_vectors') }})
    num_points: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('num_points') }})
    num_vectors: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('num_vectors') }})
    ram_usage_bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ram_usage_bytes') }})
    segment_type: shared_segmenttype.SegmentType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segment_type') }})
    r"""Type of segment"""
    